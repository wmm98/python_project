function News(){this.progressGroup=$("#progress-group")}News.prototype.listenUploadFielEvent=function(){var o=$("#thumbnail-btn");o.change(function(){var t=o[0].files[0],e=new FormData;e.append("file",t),xfzajax.post({url:"/cms/upload_file/",data:e,processData:!1,contentType:!1,success:function(e){if(200===e.code){var o=t.name;console.log(o),$("#thumbnail-form").val(o)}}})})},News.prototype.listenQiniuUploadFileEvent=function(){var s=this;$("#thumbnail-btn").change(function(){var i=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var o=e.data.token,t=(new Date).getTime()+"."+i.name.split(".")[1],n={fname:t,params:{},mimeType:["application/pdf"]},a={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(i,t,o,n,a).subscribe({next:s.handleFileUploadProgress,error:s.handleFileUploadError,complete:s.handleFileUploadComplete})}}})})},News.prototype.handleFileUploadProgress=function(e){var o=e.total.percent.toFixed(0)+"%";News.progressGroup.show();var t=$(".progress-bar");t.css({width:o}),t.text(o)},News.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message),$("#progress-group").hide(),console.log(e.message)},News.prototype.handleFileUploadComplete=function(e){console.log(e),$("#progress-group").hide();var o="q5jl6xwjh.bkt.clouddn.com/"+e.key;$("input[name='thumbnail']").val(o)},News.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var o=$(this).attr("data-payinfo-id"),t=$("input[name='title']").val(),n=$("input[name='desc']").val(),a=$("input[name='thumbnail']").val(),i=$("input[name='price']").val(),s="";s=o?"/cms/edit_payinfo/":"/cms/pay_info/",xfzajax.post({url:s,data:{title:t,price:i,profile:n,path:a,pk:o},success:function(e){200===e.code&&("/cms/pay_info/"==s?xfzalert.alertSuccess("恭喜！资讯发表成功！",function(){window.location.reload()}):xfzalert.alertSuccess("恭喜！资讯编辑成功！",function(){window.location.reload()}))}})})},News.prototype.run=function(){this.listenSubmitEvent(),this.listenUploadFielEvent()},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
